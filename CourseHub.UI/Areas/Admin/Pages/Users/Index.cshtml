@page
@using CourseHub.UI.Helpers.AppStart;
@model CourseHub.UI.Areas.Admin.Pages.Users.IndexModel
@{
    ViewData[AdminGlobal.TITLE] = "Admin | Users Management";

    string blockUserPath = Configurer.GetApiClientOptions().ApiServerPath + "/api/users/block/";
}

<style>
    .popup-box {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: none;
        z-index: 1;
    }

    .popup-box.show {
        display: block;
    }

    .box {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fff;
        padding: 20px;
        border-radius: 5px;
        text-align: center;

        min-width: 450px;
    }

    .close-icon {
        position: absolute;
        right: 10px;
        top: 5px;
        width: 15px;
        height: 15px;
        font-size: 15px;
        font-weight: bold;
        text-align: center;
        cursor: pointer;
    }

    .box h2 {
        margin: 0 0 20px;
        border-bottom: 1px solid #ccc;
        padding: 0 0 5px;
        color: #333;
    }

    .greenBtn {
        background: #5cb85c;
        width: 100%;
        color: #fff;
        border: 0;
        outline: none;
        font-size: 15px;
        height: 35px;
        border-radius: 5px;
        cursor: pointer;
    }

    .greenBtn:hover {
        background-color: green;
        color: white;
    }

    .redBtn {
        background: red;
        width: 100%;
        color: #fff;
        border: 0;
        outline: none;
        font-size: 15px;
        height: 35px;
        border-radius: 5px;
        cursor: pointer;
    }

    .redBtn:hover {
        background-color: #770000;
        color: white;
    }

    .chosse {
        display: flex;
        justify-content: space-between;
    }
    .chosse button {
        margin: 10px;
    }
    /*Alert*/
    .swal-modal {
        font-family: sans-serif;
    }

    .swal-text {
        text-align: center;
    }

    table td:last-child {
        text-align: center;
        vertical-align: middle;
    }
</style>


<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th class="text-center">Fullname</th>
                            <th class="text-center">Date of Birth</th>
                            <th class="text-center">Email</th>
                            <th class="text-center">Role</th>
                            <th class="text-center">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Data is null)
                        {
                            <tr class="error">Error</tr>
                        }
                        else
                        {
                            foreach (var user in Model.Data.Items)
                            {
                                <tr>
                                    <td>
                                        <a href="@("/User?id=" + user.Id)">@user.FullName</a>
                                    </td>
                                    <td>@user.DateOfBirth</td>
                                    <td>@user.Email</td>
                                    <td>@user.Role.ToString()</td>
                                    <td>
                                        @if (user.Role < Core.Entities.UserDomain.Enums.Role.Admin && user.IsApproved)
                                        {
                                            <div class="app-dismiss-btn btn btn-danger" onclick="openBlock('@user.Id', '@user.FullName')">Block</div>
                                        }
                                        else if (!user.IsApproved)
                                        {
                                            <div>Inactive</div>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>






@*block popup*@
<div class="popup-box" id="popupBox">
    <div class="box">
        <button type="button" class="close" id="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h3 id="app-popup-content"></h3>
        <div class="chosse">
            <button class="greenBtn" type="submit" id="submit">Yes</button>
            <button class="redBtn " type="submit" id="cancel">Cancel </button>
        </div>
    </div>
</div>

@section Script {
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script type="module">
        import { postWithCredentials } from '/js/apis/http.js';
        window.postWithCredentials = postWithCredentials;
    </script>
    <script>
        const popupBox = document.getElementById('popupBox');
        const closeBtn = document.getElementById('close');
        const cancelBtn = document.getElementById('cancel');
        const blockContentEle = document.getElementById('app-popup-content');
        const blockSubmitEle = document.getElementById('submit');

        var blockTarget;
        function openBlock(id, name) {
            blockTarget = {
                id: id,
                name: name
            };
            blockContentEle.innerHTML =
                `
                <div>Do you want to block user</div>
                <div>"${blockTarget.name}" ?</div>
                `;
            popupBox.classList.add('show');
        }

        blockSubmitEle.onclick = () => {
            window.postWithCredentials(
                "@blockUserPath" + blockTarget.id
            ).then(res => {
                if (res.ok) {
                    window.location.reload();
                }
            });
        }

        closeBtn.onclick = hidePopup;
        cancelBtn.onclick = hidePopup;

        function hidePopup() {
            popupBox.classList.remove('show');
        }
    </script>
}